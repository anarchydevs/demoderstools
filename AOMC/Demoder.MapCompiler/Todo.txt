Compiler.cs
	Events:
		Add events which a calling library/application may subscribe to, to get status information.
		Status:
			All Images loaded
			All Images Sliced
			All Worker Tasks Finished
			Assembly finished
		Debug/Notice:
			Image loaded
			Image sliced
			Worker finished a task
Worker.cs
	Optimize the comparer - split task into two threads. (will this be worth the effort?)
	
Optimizations: (assessments made based on seconds, not percent)
	(done?) Performance testing shows that the largest performance optimization is to be found in the Image Slicer.
	Next-largest is in the comparing worker. (worker is almost instant anyway)
	Then, in the end, the assembler; but only by spewing out completed tasks as they are completed IF we're in multi binfile mode.
		Since it will have to wait for the last slice anyway, this will only be of major benefit when writing to something utterly slow.
